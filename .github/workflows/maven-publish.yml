name: Build and Update Snapshot Version

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for tags and branches

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Extract release version
        id: extract-release-version
        run: |
          release_version=${GITHUB_REF#refs/tags/}
          echo "Release version: $release_version"
          echo "::set-output name=release_version::$release_version"

      - name: Update POM to release version
        run: |
          release_version=${{ steps.extract-release-version.outputs.release_version }}
          mvn versions:set -DnewVersion=$release_version
          mvn versions:commit

      - name: Build with Maven
        run: mvn clean install

      - name: Publish to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

      - name: Calculate next snapshot version
        id: calculate-version
        run: |
          release_version=${{ steps.extract-release-version.outputs.release_version }}
          
          # Increment patch version
          IFS='.' read -r -a version_parts <<< "$release_version"
          version_parts[2]=$((version_parts[2] + 1))
          next_snapshot_version="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}-SNAPSHOT"
          echo "Next snapshot version: $next_snapshot_version"
          
          # Set output variable
          echo "::set-output name=next_snapshot_version::$next_snapshot_version"

      - name: Update POM to next snapshot version
        run: |
          next_snapshot_version=${{ steps.calculate-version.outputs.next_snapshot_version }}
          mvn versions:set -DnewVersion=$next_snapshot_version
          mvn versions:commit

      - name: Prepare SSH key
        id: prepare_ssh
        run: |
            echo "-----BEGIN RSA PRIVATE KEY-----" > temp_ssh_key
            echo "${{ secrets.SSH_PRIVATE_KEY }}" >> temp_ssh_key
            echo "-----END RSA PRIVATE KEY-----" >> temp_ssh_key
            echo "::set-output name=ssh_key::$(cat temp_ssh_key)"

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ steps.prepare_ssh.outputs.ssh_key }}

      - name: Commit and push changes to dev
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git checkout -b dev
          git add pom.xml
          git commit -m "Update to version ${{ steps.calculate-version.outputs.next_snapshot_version }}"
          git push origin dev

      - name: Restore POM to release version on main
        run: |
          release_version=${{ steps.extract-release-version.outputs.release_version }}
          mvn versions:set -DnewVersion=$release_version
          mvn versions:commit
          git add pom.xml
          git commit -m "Restore POM to release version $release_version"
          git push origin main
