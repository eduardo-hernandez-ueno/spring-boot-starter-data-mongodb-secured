name: Maven Release

on:
  release:
    types: [ created ]
  workflow_dispatch:
    inputs:
      version:
        description: "The release version"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Update POM version to release version
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name != '' && github.event.release.tag_name || github.event.inputs.version }}
          mvn versions:set -DnewVersion=${RELEASE_VERSION}
          mvn versions:commit

      - name: Build with Maven
        run: mvn -B package --file pom.xml


      - name: Generate settings.xml for Maven
        run: |
          echo "<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ github.actor }}</username>
                      <password>${{ secrets.TOKEN }}</password>
                    </server>
                  </servers>
                </settings>" > $GITHUB_WORKSPACE/settings.xml

      - name: Publish to GitHub Packages Apache Maven
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml

      - name: Update POM version to next snapshot
        run: |
          RELEASE_VERSION=${{ github.event.release.tag_name }}
          NEXT_VERSION=$(echo $RELEASE_VERSION | awk -F. -v OFS=. '{$NF += 1 ; print}')
          mvn versions:set -DnewVersion=${NEXT_VERSION}-SNAPSHOT
          mvn versions:commit

      - name: Commit and push next snapshot version
        run: |
          git config --global user.name ${{ github.actor }}
          git config --global user.password ${{ secrets.TOKEN }}
          git config --global user.email 'github-actions@github.com'
          git add pom.xml
          git commit -m "Update POM to next snapshot version"
          git push origin HEAD:main
